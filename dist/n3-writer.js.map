{"version":3,"file":"n3-writer.js","sourceRoot":"","sources":["../src/n3-writer.ts"],"names":[],"mappings":"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","sourcesContent":["import {Writer, DataFactory} from 'n3';\n\n// cf. https://github.com/rdfjs/N3.js/blob/520054a9fb45ef48b5b58851449942493c57dace/src/N3Writer.js#L378\n\nconst escape = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n  escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n  escapedCharacters = {\n    '\\\\': '\\\\\\\\',\n    '\"': '\\\\\"',\n    '\\t': '\\\\t',\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\b': '\\\\b',\n    '\\f': '\\\\f'\n  };\n\nconst DEFAULTGRAPH = DataFactory.defaultGraph();\nconst aTagAttrs = `target=\"_blank\" rel=\"noopener noreferrer\"`;\n\nexport class NanopubWriter extends Writer {\n  // Stubs for TS to use parent class props and methods\n  _lists: any;\n  _baseMatcher: any;\n  _baseLength: any;\n  _prefixRegex: any;\n  _prefixIRIs: any;\n  _inDefaultGraph: any;\n  _graph: any;\n  _subject: any;\n  _predicate: any;\n  _blockedWrite: any;\n  _outputStream: any;\n  _endStream: any;\n  _encodeSubject: any;\n  _encodePredicate: any;\n  _encodeObject: any;\n  _write: any;\n\n  // `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity: any) {\n    // console.log(\"ENCODE!!\", entity, this._lists)\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && entity.value in this._lists) entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseMatcher && this._baseMatcher.test(iri)) iri = iri.substr(this._baseLength);\n    // Escape special characters\n    if (escape.test(iri)) iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    if (prefixMatch && !prefixMatch[2]) {\n      prefixMatch[2] = '';\n    }\n    return !prefixMatch\n      ? `<<a href=\"${iri}\" title=\"${iri}\" ${aTagAttrs}>${iri}</a>>`\n      : !prefixMatch[1]\n      ? iri\n      : `<a href=\"${iri}\" title=\"${iri}\" ${aTagAttrs}>${this._prefixIRIs[prefixMatch[1]] + prefixMatch[2] || ':'}</a>`;\n  }\n\n  _writeQuad(subject: any, predicate: any, object: any, graph: any, done: any) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // TODO: add divs with CSS classes for head, assertion, prov, pubinfo\n        const graphStr = graph.id.toString().toLowerCase();\n        let graphLabel = 'assertion';\n        if (graphStr.endsWith('head')) graphLabel = 'head';\n        if (graphStr.endsWith('provenance') || graphStr.endsWith('prov')) graphLabel = 'provenance';\n        if (graphStr.endsWith('pubinfo')) graphLabel = 'pubinfo';\n\n        // Close the previous graph and start the new one\n        this._write(\n          (this._subject === null ? '' : this._inDefaultGraph ? '.<br/>' : ' .<br/>}</div>') +\n            (DEFAULTGRAPH.equals(graph)\n              ? ''\n              : `<div class=\"nanopub-graph\" id=\"nanopub-${graphLabel}\">${this._encodeIriOrBlank(graph)} {<br/>`)\n        );\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate)) this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(\n            ` ;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${this._encodePredicate(\n              (this._predicate = predicate)\n            )} ${this._encodeObject(object)}`,\n            done\n          );\n      } else {\n        // Different subject, write the whole quad\n        this._write(\n          `${\n            (this._subject === null ? '' : ' .<br/>') +\n            `&nbsp;&nbsp;&nbsp;&nbsp;` +\n            this._encodeSubject((this._subject = subject))\n          } ${this._encodePredicate((this._predicate = predicate))} ${this._encodeObject(object)}`,\n          done\n        );\n      }\n    } catch (error) {\n      done && done(error);\n    }\n  }\n\n  override addPrefixes(prefixes: any, done: any) {\n    // Ignore prefixes if not supported by the serialization\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.<br/>' : '<br/>}<br/>');\n      (this._subject = null), (this._graph = '');\n    }\n\n    if (!this._prefixIRIs) return done && done();\n    // Write all new prefixes\n    let hasPrefixes = false;\n    // let i = 0;\n    // const enoughPrefixes = Object.keys(prefixes).length > 1\n    for (let prefix in prefixes) {\n      // if (enoughPrefixes && i === 1) {\n      //   this._write('<div class=\"nanopub-prefixes\">');\n      // }\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string') iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      // if (this._subject !== null) {\n      //   this._write(this._inDefaultGraph ? '.<br/>' : '<br/>}<br/>');\n      //   this._subject = null, this._graph = '';\n      // }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = prefix += ':';\n      // this._write(`@prefix ${prefix} <<a href=\"${iri}\" ${aTagAttrs}>${iri}</a>> .`);\n\n      // if (enoughPrefixes && i === 0) {\n      //   this._write('<button @click=\"${this._expandPrefixes}\" class=\"nanopub-prefixes-button\">Show all prefixes</button>');\n      // }\n      // this._write(`<br/>`);\n      // i++\n    }\n    // if (enoughPrefixes) {\n    //   this._write('</div>');\n    // }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '',\n        prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = escapeRegex(IRIlist);\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` + `^(${IRIlist})([_a-zA-Z][\\\\-_a-zA-Z0-9]*)*$`);\n    }\n    // End a prefix block with a newline\n    // this._write(hasPrefixes ? '' : '', done);\n  }\n\n  override end(done: any) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.<br/>' : ' .<br/>}</div>');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone =\n      done &&\n      ((error: any, result: any) => {\n        (singleDone = null), done(error, result);\n      });\n    if (this._endStream) {\n      try {\n        return this._outputStream.end(singleDone);\n      } catch (error) {\n        /* error closing stream */\n      }\n    }\n    singleDone && singleDone();\n  }\n}\n\nfunction escapeRegex(regex: any) {\n  return regex.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n}\n\nfunction characterReplacer(character: any) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xd800) * 0x400 + character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n"]}