{"version":3,"file":"nanopub-display.js","sourceRoot":"","sources":["../src/nanopub-display.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport {when} from 'lit/directives/when.js';\nimport {unsafeHTML} from 'lit/directives/unsafe-html.js';\nimport {styleMap} from 'lit/directives/style-map.js';\n\nimport {Parser, Quad} from 'n3';\nimport {NanopubWriter} from './n3-writer';\n\nconst npColor = {\n  head: css`#e8e8e8`,\n  assertion: css`#99ccff`,\n  provenance: css`#f3a08c`,\n  pubinfo: css`#ffff66`,\n  error: css`#f88b80`,\n  grey: css`#d1d1d1`,\n};\n\n/**\n * A component to display a Nanopublication.\n */\n@customElement('nanopub-display')\nexport class NanopubDisplay extends LitElement {\n  static override styles = css`\n    :host {\n      font-family: monaco, monospace;\n      font-size: 11pt;\n      color: #444;\n      display: flex;\n      height: 100%;\n      width: 100%;\n      word-break: break-all;\n      margin-bottom: 8px;\n    }\n    a {\n      color: #000;\n      text-decoration: none;\n    }\n    a:hover {\n      color: #666;\n    }\n    .nanopub {\n      height: 100%;\n      padding: 8px;\n      border-radius: 8px;\n      border: solid;\n      border-width: 1px;\n    }\n    .nanopub-graph {\n      padding: 8px;\n      margin-top: 8px;\n      border-radius: 8px;\n    }\n    #nanopub-prefixes {\n      display: none;\n    }\n    #nanopub-head {\n      display: none;\n      background: ${npColor.head};\n    }\n    #nanopub-assertion {\n      background: ${npColor.assertion};\n    }\n    #nanopub-provenance {\n      background: ${npColor.provenance};\n    }\n    #nanopub-pubinfo {\n      background: ${npColor.pubinfo};\n    }\n    .display-checklist {\n      font-family: sans-serif;\n      float: right;\n      font-size: 9pt;\n      background: ${npColor.head};\n      border-radius: 7px;\n      text-align: center;\n    }\n    .display-checklist .anchor-display-checklist {\n      position: relative;\n      display: inline-block;\n      text-decoration: none;\n      padding: 3px 8px;\n      border-radius: 7px;\n      cursor: help;\n    }\n    .display-checklist .anchor-display-checklist:hover {\n      background: ${npColor.grey};\n    }\n    .display-checklist-wrapper {\n      z-index: 1;\n      position: absolute;\n      margin-top: 1px;\n    }\n    .display-checklist ul.items {\n      position: relative;\n      min-width: 100px;\n      text-align: left;\n      width: max-content;\n      padding: 2px;\n      margin: 0;\n      border: 1px solid #ccc;\n      border-radius: 7px;\n      background: #fff;\n    }\n    .display-checklist ul.items li {\n      list-style: none;\n      margin-right: 8px;\n    }\n    .display-checklist label,\n    li,\n    input[type='checkbox'] {\n      cursor: pointer;\n    }\n  `;\n\n  /**\n   * The URL of the nanopublication to display\n   */\n  @property({type: String})\n  url = '';\n  /**\n   * The RDF string of the nanopublication to display. Will be downloaded from URL if not provided.\n   */\n  @property({type: String})\n  rdf = '';\n\n  /**\n   * Display the prefixes section, or not\n   */\n  @property({type: Boolean})\n  displayPrefixes = false;\n  /**\n   * Display the Head graph section, or not\n   */\n  @property({type: Boolean})\n  displayHead = false;\n  /**\n   * Display the PubInfo graph section, or not\n   */\n  @property({type: Boolean})\n  displayPubinfo = true;\n  /**\n   * Display the Provenance graph section, or not\n   */\n  @property({type: Boolean})\n  displayProvenance = true;\n  /**\n   * Display the Assertion graph section, or not\n   */\n  @property({type: Boolean})\n  displayAssertion = true;\n\n  /**\n   * Hide the PubInfo graph by default\n   */\n  @property({type: Boolean})\n  hidePubinfo = false;\n  /**\n   * Hide the Provenance graph by default\n   */\n  @property({type: Boolean})\n  hideProvenance = false;\n  /**\n   * Hide the Assertion graph by default\n   */\n  @property({type: Boolean})\n  hideAssertion = false;\n\n  /**\n   * Disable the button to change which sections of the nanopub are displayed\n   */\n  @property({type: Boolean})\n  disableDisplayButton = false;\n\n  /**\n   * Boolean to know if the window to change which sections of the nanopub are displayed is opened\n   */\n  @state()\n  showDisplayOptions = false;\n  /**\n   * The HTML generated from the RDF to display the nanopub\n   */\n  @state()\n  html_rdf?: any;\n  /**\n   * A dictionary with the prefixes and namespaces used in the nanopub\n   */\n  @state()\n  prefixes?: any;\n\n  /**\n   * Error message to show if there is a problem displaying the nanopub\n   */\n  @state()\n  error?: string;\n\n  /**\n   * Fetch the Nanopub if needed, parse the RDF TRiG using n3.js,\n   * and generate the HTML to represent the nanopub\n   */\n  override async connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.url && !this.rdf) {\n      this.error = `⚠️ No nanopublication has been provided, use the \"url\" or \"rdf\"\n        attribute to provide the URL, or RDF in the TRiG format, of the nanopublication.`;\n    }\n\n    if (!this.error && this.url && !this.rdf) {\n      if (\n        this.url.startsWith('https://purl.org/np/') &&\n        !this.url.endsWith('.trig')\n      ) {\n        this.url = this.url + '.trig';\n      }\n      try {\n        const response = await fetch(this.url);\n        this.rdf = await response.text();\n      } catch (error) {\n        this.error = `⚠️ Issue fetching the nanopublication RDF at ${this.url}. ${error}`;\n      }\n    }\n\n    // Parse the RDF with n3.js\n    if (!this.error && this.rdf) {\n      const parser = new Parser();\n      const writer = new NanopubWriter(null, {format: 'application/trig'});\n      const quadList: Quad[] = [];\n      parser.parse(this.rdf, (error: any, quad: Quad, prefixes: any): any => {\n        if (error) {\n          this.error = `⚠️ Issue parsing the nanopublication RDF with n3.js, make sure it is in the TRiG format. ${error}`;\n          return null;\n        }\n        if (quad) {\n          quadList.push(quad);\n        } else {\n          this.prefixes = {\n            this: prefixes['this'],\n            sub: prefixes['sub'],\n            ...prefixes,\n          };\n          writer.addPrefixes(this.prefixes, null);\n          // Add the quads to the writer after the prefixes\n          quadList.map((addQuad: Quad) => {\n            writer.addQuad(addQuad);\n          });\n          writer.end((_error: any, result: string) => {\n            this.html_rdf = unsafeHTML(result);\n            // this.html_rdf = html`${result}`\n            setTimeout(() => {\n              // Timeout 0 makes sure the div are loaded before updating the displayed sections\n              // TODO: use lifecycle firstUpdated() or updated()? https://lit.dev/docs/components/lifecycle/#reactive-update-cycle\n              this._applyDisplay('displayPrefixes');\n              this._applyDisplay('displayHead');\n              if (this.hidePubinfo) this.displayPubinfo = false;\n              this._applyDisplay('displayPubinfo');\n              if (this.hideProvenance) this.displayProvenance = false;\n              this._applyDisplay('displayProvenance');\n              if (this.hideAssertion) this.displayAssertion = false;\n              this._applyDisplay('displayAssertion');\n            }, 0);\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Apply display described in the state to a nanopub section in the HTML\n   */\n  _applyDisplay(displayProp: string) {\n    const displayLabel = displayProp.substring(7).toLowerCase();\n    const ele: HTMLElement | null = this.renderRoot.querySelector(\n      `#nanopub-${displayLabel}`\n    );\n    if (ele) {\n      ele.style.display = this[displayProp] ? 'inherit' : 'none';\n    }\n  }\n\n  /**\n   * Switch display of a nanopub section, called when checkbox clicked\n   */\n  _switchDisplay(displayProp: string) {\n    this[displayProp] = !this[displayProp];\n    this._applyDisplay(displayProp);\n  }\n\n  /**\n   * Open the dropdown window to select which nanopub section to display\n   */\n  _openDisplayOptions() {\n    this.showDisplayOptions = !this.showDisplayOptions;\n    if (window && this.showDisplayOptions) {\n      window.addEventListener('click', this._handleClickOut);\n    }\n  }\n\n  /**\n   * Close the display selection dropdown window if click outside of it\n   */\n  _handleClickOut = (e: any) => {\n    const ele: HTMLElement | null =\n      this.renderRoot.querySelector(`.display-checklist`);\n    if (window && !ele?.contains(e.originalTarget)) {\n      this.showDisplayOptions = false;\n      window.removeEventListener('click', this._handleClickOut);\n    }\n  };\n\n  override render() {\n    return html`\n      <div\n        class=\"nanopub\"\n        style=${styleMap({\n          'background-color': this.error ? npColor.error.toString() : 'inherit',\n        })}\n      >\n        ${when(this.prefixes, () => {\n          return html` @prefix ${Object.keys(this.prefixes)[0]} <<a\n              href=\"${this.prefixes[Object.keys(this.prefixes)[0]]}\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              >${this.prefixes[Object.keys(this.prefixes)[0]]}</a\n            >> .\n            ${!this.disableDisplayButton\n              ? html`<div class=\"display-checklist\" tabindex=\"100\">\n                  <span\n                    class=\"anchor-display-checklist\"\n                    @click=\"${() => this._openDisplayOptions()}\"\n                    @touchstart=\"${() => this._openDisplayOptions()}\"\n                  >\n                    ${displayIcon}\n                    ${this.showDisplayOptions\n                      ? html`Select the sections to display`\n                      : html``}\n                  </span>\n                  ${this.showDisplayOptions\n                    ? html`<div class=\"display-checklist-wrapper\">\n                        <ul class=\"items\" id=\"display-checklist-items\">\n                          <li\n                            id=\"displayPrefixes\"\n                            @click=${(e: any) =>\n                              this._switchDisplay(e.target.id)}\n                          >\n                            <label\n                              ><input\n                                type=\"checkbox\"\n                                value=\"displayPrefixes\"\n                                .checked=${this.displayPrefixes}\n                                @click=${(e: any) =>\n                                  this._switchDisplay(e.target.value)}\n                              />\n                              Display prefixes\n                            </label>\n                          </li>\n                          <li\n                            id=\"displayHead\"\n                            @click=${(e: any) =>\n                              this._switchDisplay(e.target.id)}\n                          >\n                            <label\n                              ><input\n                                type=\"checkbox\"\n                                value=\"displayHead\"\n                                .checked=${this.displayHead}\n                                @click=${(e: any) =>\n                                  this._switchDisplay(e.target.value)}\n                              />\n                              Display Head graph\n                            </label>\n                          </li>\n                          <li\n                            id=\"displayAssertion\"\n                            @click=${(e: any) =>\n                              this._switchDisplay(e.target.id)}\n                          >\n                            <label\n                              ><input\n                                type=\"checkbox\"\n                                value=\"displayAssertion\"\n                                .checked=${this.displayAssertion}\n                                @click=${(e: any) =>\n                                  this._switchDisplay(e.target.value)}\n                              />\n                              Display Assertion graph\n                            </label>\n                          </li>\n                          <li\n                            id=\"displayProvenance\"\n                            @click=${(e: any) =>\n                              this._switchDisplay(e.target.id)}\n                          >\n                            <label\n                              ><input\n                                type=\"checkbox\"\n                                value=\"displayProvenance\"\n                                .checked=${this.displayProvenance}\n                                @click=${(e: any) =>\n                                  this._switchDisplay(e.target.value)}\n                              />\n                              Display Provenance graph\n                            </label>\n                          </li>\n                          <li\n                            id=\"displayPubinfo\"\n                            @click=${(e: any) =>\n                              this._switchDisplay(e.target.id)}\n                          >\n                            <label\n                              ><input\n                                type=\"checkbox\"\n                                value=\"displayPubinfo\"\n                                .checked=${this.displayPubinfo}\n                                @click=${(e: any) =>\n                                  this._switchDisplay(e.target.value)}\n                              />\n                              Display PubInfo graph\n                            </label>\n                          </li>\n                        </ul>\n                      </div>`\n                    : html``}\n                </div>`\n              : html``}\n            <br />\n\n            <div id=\"nanopub-prefixes\">\n              ${Object.keys(this.prefixes).map((prefix, i) => {\n                if (i === 0) {\n                  return html``;\n                }\n                return html`\n                  @prefix ${prefix} <<a\n                    href=\"${this.prefixes[prefix]}\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >${this.prefixes[prefix]}</a\n                  >> .\n                  <br />\n                `;\n              })}\n            </div>`;\n        })}\n        ${this.html_rdf\n          ? html`${this.html_rdf}`\n          : this.error\n          ? html`${this.error}`\n          : html`Loading...`}\n      </div>\n    `;\n  }\n}\n\nconst displayIcon = html`<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  height=\"16\"\n  width=\"16\"\n  viewBox=\"0 -80 1000 1000\"\n>\n  <path\n    d=\"M480.118 726Q551 726 600.5 676.382q49.5-49.617 49.5-120.5Q650 485 600.382 435.5q-49.617-49.5-120.5-49.5Q409 386 359.5 435.618q-49.5 49.617-49.5 120.5Q310 627 359.618 676.5q49.617 49.5 120.5 49.5Zm-.353-58Q433 668 400.5 635.265q-32.5-32.736-32.5-79.5Q368 509 400.735 476.5q32.736-32.5 79.5-32.5Q527 444 559.5 476.735q32.5 32.736 32.5 79.5Q592 603 559.265 635.5q-32.736 32.5-79.5 32.5ZM480 856q-146 0-264-83T40 556q58-134 176-217t264-83q146 0 264 83t176 217q-58 134-176 217t-264 83Zm0-300Zm-.169 240Q601 796 702.5 730.5 804 665 857 556q-53-109-154.331-174.5-101.332-65.5-222.5-65.5Q359 316 257.5 381.5 156 447 102 556q54 109 155.331 174.5 101.332 65.5 222.5 65.5Z\"\n  />\n</svg>`;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'nanopub-display': NanopubDisplay;\n  }\n}\n\n// declare namespace JSX {\n//   interface IntrinsicElements {\n//       \"nanopub-display\": React.DetailedHTMLProps<\n//           React.HTMLAttributes<HTMLElement>,\n//           HTMLElement\n//       > & {\n//           url?: string;\n//           rdf?: string;\n//       };\n//   }\n// }\n\ndeclare namespace LocalJSX {\n  interface NanopubDisplay {\n    /**\n     * The URL\n     */\n    url?: string;\n    /**\n     * The RDF\n     */\n    rdf?: string;\n  }\n  interface IntrinsicElements {\n    'nanopub-display': NanopubDisplay;\n  }\n}\nexport {LocalJSX as JSX};\n\n// declare module \"@stencil/core\" {\n//   export namespace JSX {\n//       interface IntrinsicElements {\n//           \"my-component\": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;\n//       }\n//   }\n// }\n"]}